% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/combineMplusOutput.R
\name{combineMplusOutput}
\alias{combineMplusOutput}
\title{combineMplusOutput}
\usage{
combineMplusOutput(mplusPath = NULL, mplusFileType = NULL, recurse = TRUE,
  returnType = "list", parallel = TRUE)
}
\arguments{
\item{mplusPath}{file path to the mplus output files}

\item{mplusFileType}{Character string identifying the file type which Mplus
should attempt to read into memory}

\item{recurse}{A boolean indicating whether or not the function should search
recursively from the top-level root directory passed to the mplusPath argument}

\item{returnType}{A character string identifying the type of object to be
returned to the end user}

\item{parallel}{A boolean indicating whether the package should load the doMC
package and process the files in parallel}
}
\value{
An object containing the output based on the input arguments/parameters
}
\description{
Simple package to combine the output from multiple Mplus runs
located within a single root directory (with or without subdirectories)
}
\note{
List objects may require slightly less memory compared to character class objects.
When developing the function, the character object was ~ 51MB while the list object
of the same data required only 47.9MB.

The graphics data - for 32 files with ~ 40k records each - was roughly .66GB.
}
\examples{
\donttest{
# Create an object with the root directory where output is stored
rootDir <- "~/Desktop/sdpmplus/output/"

# Define the file types to combine
fileTypes <- ".*.out"

# Should the function search the root directory recursively or not
recursiveSearch <- TRUE

# What class object should be returned
returnClass <- "list"

# Run the function in parallel?
parallelMplus <- TRUE

# Call the function with the object arguments above
myMplusOutput <- combineMplusOutput(mplusPath = rootDir,
		mplusFileType = fileTypes, recurse = recursiveSearch,
		returnType = returnClass, parallel = parallelMplus)
}
}

